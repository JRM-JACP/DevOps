version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION:-latest}
    container_name: zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION:-latest}
    container_name: kafka
    depends_on:
      - zookeeper
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 20s
      timeout: 5s
      retries: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: always

  init-kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION:-latest}
    container_name: init-kafka
    depends_on:
      - kafka
    entrypoint: [ "/bin/bash" , "-c" ]
    command: |
        "
        sleep 5s
        # blocks until kafka is reachable
        kafka-topics --bootstrap-server kafka:9092 --list
        
        echo -e 'Creating kafka topics'
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic jacp-competition-solutions --replication-factor 1 --partitions 1
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic jacp-competitino-results --replication-factor 1 --partitions 1
        
        echo -e 'Successfully created the following topics:'
        kafka-topics --bootstrap-server kafka:9092 --list
        "  

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    healthcheck:
      test: nc -z localhost 8080 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
        micronaut:
          security:
            enabled: true
            token:
              jwt:
                signatures:
                  secret:
                    generator:
                      secret: test
    ports:
      - 9090:8080
    depends_on:
      - kafka



